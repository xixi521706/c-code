//（反转）字符串，判断另一字符串是否是其子串
#include <stdio.h>                    //暴力反转判断法
#include <string.h>

int is_left_move(char* arr1,char* arr2)
{
    int len1=strlen(arr1);
    int len2=strlen(arr2);
    int i=0;
    for(i=0;i<len1+1;i++)
        {
             int j=0;
             char tmp=arr1[0];
             for(j=1;j<len;j++)
             {
                 arr1[j-1]=arr1[j];
             }
             arr1[len-1]=tmp
            int ret= strcmp(arr1,arr2)
            {
                 if(ret == 0)
                      return 1;
            }
        }
        return 0;
}
int main(0
{
    char arr1[20] = "abcdef" ;
    char arr2[] = "cadfat";
    int ret=0;
    ret=is_left_move(arr1,arr2)
    if(ret)
        printf("Yes\n");
    else
        printf("No\n");
    return 0;
}

//方法2：

int is_left_move(char* arr1,char* arr2)     
{
    int len1=strlen(arr1);
    int len2=strlen(arr2);
    strncat(arr1,arr1，len1);     //库函数，字符串后面增加len1个字符，相当于复制在后面
    if(strstr(arr1,arr2) != NULL)  //库函数，判断后面的字符串是否为字串，返回值为找到后的母串位置的指针，否则为NULL
        return 1;
    else
        return 0; 
}
int main()
{
    char arr1[20] = "abcdef" ;
    char arr2[] = "cadfat";
    int ret=0;
    ret=is_left_move(arr1,arr2)
    if(ret)
        printf("Yes\n");
    else
        printf("No\n");
    return 0;
}





